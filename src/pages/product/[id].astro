---
import Layout from "../../layouts/Layout.astro";
import products from "../../../products.json";
export function getStaticPaths() {
    return products.map((p) => ({ params: { id: p.id } }));
}

const { id } = Astro.params;

const product = products.find((p) => p.id === +id);
const relatedProducts = products.filter(
    (p) => p.category === product.category && p.id !== +id,
);
---

<Layout title="Product">
    <section class="flex flex-wrap items-center justify-center pt-20">
        <div class="w-full md:w-[50%]">
            <img src={`${product.img}`} alt="" />
        </div>
        <div class="p-5">
            <p class="p-2 text-[12px] pt-5">
                Inicio > CONJUNTOS > {product.name}
            </p>
            <h2 class="text-3xl font-bold p-1">{product.name}</h2>
            <p class="p-2 font-bold">
                ${product.price}
                <span class="text-gray-400 ml-5"
                    ><del>${product.price + 25000}</del></span
                >
                <span
                    class="ml-2 p-1 rounded-full bg-red-700 px-2 text-center text-sm font-medium text-white"
                >
                    30% OFF
                </span>
            </p>
            <p class="text-[#c0392b] font-bold p-2">
                <span
                    ><svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="icon icon-tabler icon-tabler-credit-card inline mb-1 mr-2"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        stroke-width="2"
                        stroke="currentColor"
                        fill="none"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        ><path stroke="none" d="M0 0h24v24H0z" fill="none"
                        ></path><path
                            d="M3 5m0 3a3 3 0 0 1 3 -3h12a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-12a3 3 0 0 1 -3 -3z"
                        ></path><path d="M3 10l18 0"></path><path
                            d="M7 15l.01 0"></path><path d="M11 15l2 0"
                        ></path></svg
                    ></span
                >

                3 cuotas sin interés de ${(product.price / 3).toFixed(2)}
            </p>
            <p class="p-2">
                <span
                    ><svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="icon icon-tabler icon-tabler-cash-banknote inline mr-1 text-[#c0392b]"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        stroke-width="2"
                        stroke="currentColor"
                        fill="none"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        ><path stroke="none" d="M0 0h24v24H0z" fill="none"
                        ></path><path
                            d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"
                        ></path><path
                            d="M3 6m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z"
                        ></path><path d="M18 12l.01 0"></path><path
                            d="M6 12l.01 0"></path></svg
                    ></span
                >

                <span class="text-[#c0392b] font-bold">10% de descuento</span>
                pagando con TRANSFERENCIA <br /> BANCARIA
            </p>
            <a href="" class="text-[12px] p-2">Ver más detalles</a>
            <div
                class="flex items-center justify-center space-x-7 flex-wrap mt-3"
            >
                <div class="p-2">
                    <p class="pl-2 mb-1 text-[12px]">Color</p>
                    <input
                        type="text"
                        list="colors"
                        placeholder="Beige"
                        class="border rounded-[20px] p-2 placeholder:text-black"
                    /><span
                        ><svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="icon icon-tabler icon-tabler-arrow-narrow-down inline"
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            stroke-width="2"
                            stroke="currentColor"
                            fill="none"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            ><path stroke="none" d="M0 0h24v24H0z" fill="none"
                            ></path><path d="M12 5l0 14"></path><path
                                d="M16 15l-4 4"></path><path d="M8 15l4 4"
                            ></path></svg
                        ></span
                    >
                    <datalist id="colors">
                        <option>Negro</option>
                        <option>Blanco</option>
                        <option>Beige</option>
                    </datalist>
                </div>
                <div class="mx-auto">
                    <p class="pl-2 mb-1 text-[12px]">Talle</p>
                    <input
                        type="text"
                        list="talles"
                        placeholder="XS"
                        class="border rounded-[20px] p-2 placeholder:text-black"
                    /><span
                        ><svg
                            xmlns="http://www.w3.org/2000/svg"
                            class="icon icon-tabler icon-tabler-arrow-narrow-down inline"
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            stroke-width="2"
                            stroke="currentColor"
                            fill="none"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            ><path stroke="none" d="M0 0h24v24H0z" fill="none"
                            ></path><path d="M12 5l0 14"></path><path
                                d="M16 15l-4 4"></path><path d="M8 15l4 4"
                            ></path></svg
                        ></span
                    >
                    <datalist id="talles">
                        <option>XS</option>
                        <option>S</option>
                        <option>M</option>
                        <option>L</option>
                        <option>XL</option>
                        <option>XXL</option>
                    </datalist>
                </div>
            </div>
            <div class="custom-number-input h-10 w-32 mt-3 pl-1">
                <label
                    for="custom-input-number"
                    class="w-full text-gray-700 text-sm font-semibold"
                    >Cantidad
                </label>
                <div
                    class="flex flex-row h-10 w-full rounded-lg relative bg-transparent mt-1"
                >
                    <button
                        data-action="decrement"
                        class="bg-gray-300 text-gray-600 hover:text-gray-700 hover:bg-gray-400 h-full w-20 rounded-l cursor-pointer outline-none"
                    >
                        <span class="m-auto text-2xl font-thin">−</span>
                    </button>
                    <input
                        type="number"
                        class="outline-none focus:outline-none text-center w-full bg-gray-300 font-semibold text-md hover:text-black focus:text-black md:text-basecursor-default flex items-center text-gray-700"
                        id="quantity"
                        name="custom-input-number"
                        value="1"
                    />
                    <button
                        data-action="increment"
                        class="bg-gray-300 text-gray-600 hover:text-gray-700 hover:bg-gray-400 h-full w-20 rounded-r cursor-pointer"
                    >
                        <span class="m-auto text-2xl font-thin">+</span>
                    </button>
                </div>
            </div>
            <button
                class="bg-black text-white w-[100%] mt-[80px] p-2 pt-3 pb-3 rounded-[30px] agregarCarrito"
                id={`${product.id}`}
                >A G R E G A R<span class="pr-4 pl-4">A L</span>C A R R I T O</button
            >
            <div class="flex items-center justify-center mt-4">
                <p>
                    NUEVA COLECCION MSTQ 2024, DISPONIBLE PARA ENVIAR <br />
                    DENTRO DE LOS 15 DÍAS HÁBILES LUEGO DE EFECTUADA LA <br />
                    COMPRA.
                </p>
            </div>
        </div>
    </section>
    <hr class="w-[95%] mx-auto mt-5" />
    <h3 class="text-center font-bold mt-5 text-2xl md:text-3xl">
        Productos relacionados
    </h3>
    <section class="flex flex-wrap items-center justify-around space-y-6 mt-5">
        {
            relatedProducts.map((product) => (
                <div class="shadow-md w-[90%] md:w-[23%] mt-5" id="product">
                    <span class="p-2 m-2 rounded-full bg-red-700 px-2 text-center text-sm font-bold text-white absolute z-10">
                        30% OFF
                    </span>
                    <div class="w-full mx-auto object-cover">
                        <a href={`${product.id}`}><img src={product.img} alt=""/></a>
                    </div>
                    <div class="text-center mt-2 p-2">
                        <p class="text-sm font-medium">{product.name}</p>
                        <p class="font-bold">
                            ${product.price}{" "}
                            <span class="text-gray-300">
                                <del>
                                    $
                                    {product.price + (product.price * 30) / 100}
                                </del>
                            </span>
                        </p>
                        <p class="text-xs">
                            <b>3</b> cuotas sin interés de{" "}
                            <b>${(product.price / 3).toFixed(2)}</b>
                        </p>
                        <a
                            href={`${product.id}`}
                            class="hover:text-orange-500 duration-150"
                        >
                            <strong>Ver más detalles</strong>
                        </a>
                    </div>
                </div>
            ))
        }
    </section>
</Layout>
<style>
    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    .custom-number-input input:focus {
        outline: none !important;
    }

    .custom-number-input button:focus {
        outline: none !important;
    }
</style>

<script>
    function decrement(e) {
        const btn = e.target.parentNode.parentElement.querySelector(
            'button[data-action="decrement"]',
        );
        const target = btn.nextElementSibling;
        let value = Number(target.value);
        value--;
        target.value = value < 1 ? 1 : value;
    }

    function increment(e) {
        const btn = e.target.parentNode.parentElement.querySelector(
            'button[data-action="decrement"]',
        );
        const target = btn.nextElementSibling;
        let value = Number(target.value);
        value++;
        target.value = value;
    }

    const decrementButtons = document.querySelectorAll(
        `button[data-action="decrement"]`,
    );

    const incrementButtons = document.querySelectorAll(
        `button[data-action="increment"]`,
    );

    decrementButtons.forEach((btn) => {
        btn.addEventListener("click", decrement);
    });

    incrementButtons.forEach((btn) => {
        btn.addEventListener("click", increment);
    });

    import Swal from "sweetalert2";

    //Recuperar todos los productos
    async function getProducts() {
        const respuesta = await fetch("../../products.json");
        const productos = await respuesta.json();
        return productos;
    }
    const TOTAL_PRODUCTS = await getProducts();

    //Agregar producto al carrito
    const buttonAgregarAlCarrito = document.querySelector(".agregarCarrito");
    buttonAgregarAlCarrito.addEventListener("click", agregarAlCarrito);
    function agregarAlCarrito(e) {
        const idProduct = e.target.id;
        const quantityProduct = document.getElementById(
            "quantity",
        ) as HTMLInputElement;
        const value = quantityProduct.value;
        const product = TOTAL_PRODUCTS.find((p) => p.id === +idProduct);
        product.quantity = +value;
        if (localStorage.getItem("carrito")) {
            const carrito = JSON.parse(localStorage.getItem("carrito"));
            if (carrito.find((p) => p.id === +idProduct)) {
                const indexProduct = carrito.findIndex(
                    (p) => p.id === +idProduct,
                );
                carrito[indexProduct].quantity++;
                localStorage.setItem("carrito", JSON.stringify(carrito));
            } else {
                carrito.push(product);
                localStorage.setItem("carrito", JSON.stringify(carrito));
            }
        } else {
            const carrito = [product];
            localStorage.setItem("carrito", JSON.stringify(carrito));
        }
        Swal.fire({
            title: "Producto Agregado!",
            text: `${product.name}`,
            icon: "success",
        });
        showProducts(JSON.parse(localStorage.getItem("carrito")));
    }

    //Mostrar los productos del carrito
    function showProducts(productsCart) {
        const numberCartProducts = document.getElementById(
            "cart-quantity-products",
        );
        numberCartProducts.textContent = productsCart.length;
        const containerProductsCart = document.getElementById(
            "containerProductsCart",
        );
        const totalProducts = document.getElementById("totalProducts");
        const cantidadCarrito = document.getElementById("carritoCantidad");
        if (productsCart.length === 0) {
            cantidadCarrito.classList.remove("hidden");
        } else {
            cantidadCarrito.classList.add("hidden");
        }
        if (productsCart.length === 0) {
            totalProducts.classList.add("hidden");
        } else {
            totalProducts.classList.remove("hidden");
        }
        containerProductsCart.innerHTML = "";
        let sumTotal = 0;
        productsCart.forEach((p) => {
            sumTotal += p.price * p.quantity;
            containerProductsCart.innerHTML += `
		<div class="flex items-center justify-around mx-auto w-full px-2">
		  <div>
			<img src=${p.img} alt="" class="w-28"/>
		  </div>
		  <div class=w-[50%]>
			<p>${p.name} <span class="text-gray-400">(${p.category})</span></p>
			<p>Cantidad: ${p.quantity}</p>
			<p class="font-bold">$${p.price * p.quantity}</p>
		  </div>
		  <div>
			<button id=${p.id} class=buttonsDelete>
			<svg
			  xmlns="http://www.w3.org/2000/svg"
			  class="icon icon-tabler icon-tabler-trash-filled"
			  width="24"
			  height="24"
			  viewBox="0 0 24 24"
			  stroke-width="2"
			  stroke="currentColor"
			  fill="none"
			  stroke-linecap="round"
			  stroke-linejoin="round"
			  ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
				d="M20 6a1 1 0 0 1 .117 1.993l-.117 .007h-.081l-.919 11a3 3 0 0 1 -2.824 2.995l-.176 .005h-8c-1.598 0 -2.904 -1.249 -2.992 -2.75l-.005 -.167l-.923 -11.083h-.08a1 1 0 0 1 -.117 -1.993l.117 -.007h16z"
				stroke-width="0"
				fill="currentColor"></path><path
				d="M14 2a2 2 0 0 1 2 2a1 1 0 0 1 -1.993 .117l-.007 -.117h-4l-.007 .117a1 1 0 0 1 -1.993 -.117a2 2 0 0 1 1.85 -1.995l.15 -.005h4z"
				stroke-width="0"
				fill="currentColor"></path></svg
			>
			</button>
		  </div>
		</div>
		`;
        });
        totalProducts.innerHTML = "";
        totalProducts.innerHTML += `<div class="border-t border-b p-3 px-4 w-[90%] mx-auto text-[14px]">
        <p class="flex items-center justify-between"><span>Subtotal:</span> <span>$${sumTotal}</span></p>
        <p class="flex items-center justify-between"><span>Envío:</span> <span class="text-gray-400">El costo se calcula más adelante</span></p>
      </div>
      <div class="border-t p-2 px-4 w-[90%] mx-auto">
        <p class="flex items-center justify-between font-bold text-2xl"><span>Total:</span><span>$${sumTotal}</span></p>
        <p class="flex items-center justify-between text-[12px] font-bold p-2"><span></span><span class="text-[#c0392b]">O hasta 3 cuotas sin interés de $${(
            sumTotal / 3
        ).toFixed(2)}</span></p>
      </div>
      <div class="text-center pb-5">
        <button class="text-center bg-black text-white p-3 rounded-[50px] w-[90%]" id="comprar-productos">I N I C I A R <span class="px-2"></span> C O M P R A</button>
      </div>`;
        const buttonsDelete = document.querySelectorAll(".buttonsDelete");
        buttonsDelete.forEach((b) => {
            b.addEventListener("click", deleteProductInCart);
        });
        const buyButton = document.getElementById("comprar-productos")
        buyButton.addEventListener("click",buyProducts)
    }

    //Eliminar producto en carrito
    function deleteProductInCart() {
        let cart = JSON.parse(localStorage.getItem("carrito"));
        const idProduct = this.id;
        cart = cart.filter((p) => p.id !== +idProduct);
        localStorage.setItem("carrito", JSON.stringify(cart));
        showProducts(JSON.parse(localStorage.getItem("carrito")));
    }

    //Comprar productos en carrito
    function buyProducts(){
        function randomOrder(){
            let order = ""
            let x = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789";
            for(let i = 0; i<5; i++){
               const randomNumber = Math.floor(Math.random()*x.length)
               order += x[randomNumber]
            }
            return order
        }
        Swal.fire({
            title: "Compra Exitosa!",
            text: `Orden de Compra: ${randomOrder()}`,
            icon: "success",
        });
        localStorage.setItem("carrito",JSON.stringify([]))
        showProducts(JSON.parse(localStorage.getItem("carrito")))
    }

    showProducts(JSON.parse(localStorage.getItem("carrito")));

    //Slider
</script>